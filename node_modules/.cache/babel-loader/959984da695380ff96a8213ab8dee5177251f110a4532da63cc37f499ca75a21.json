{"ast":null,"code":"var _jsxFileName = \"D:\\\\Codes\\\\New\\\\portfolio\\\\src\\\\pages\\\\Projects.js\";\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectsContainer = styled.div`\n  padding: 2rem;\n  margin-top: 80px;  // Add space below navbar\n  \n  @media (max-width: 768px) {\n    margin-top: 60px;  // Smaller margin for mobile devices\n  }\n`;\n_c = ProjectsContainer;\nconst ProjectGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 2rem;\n`;\n_c2 = ProjectGrid;\nconst ProjectCard = styled(motion.div)`\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n  padding: 1.5rem;\n  text-align: center;\n`;\n_c3 = ProjectCard;\nconst ProjectTitle = styled.h3`\n  color: #3498db;\n  margin-bottom: 1rem;\n`;\n_c4 = ProjectTitle;\nconst ProjectDescription = styled.p`\n  color: #666;\n`;\n_c5 = ProjectDescription;\nconst Projects = () => {\n  const projectsData = [{\n    title: 'Project 1',\n    description: 'A brief description of your first project.',\n    technologies: ['React', 'Node.js', 'MongoDB']\n  }, {\n    title: 'Project 2',\n    description: 'Details about another impressive project you\\'ve worked on.',\n    technologies: ['Python', 'Django', 'PostgreSQL']\n  }, {\n    title: 'Project 3',\n    description: 'Highlight your most significant or recent project.',\n    technologies: ['JavaScript', 'React Native', 'Firebase']\n  }];\n  return /*#__PURE__*/_jsxDEV(ProjectsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectGrid, {\n      children: projectsData.map((project, index) => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        initial: {\n          opacity: 0,\n          scale: 0.9\n        },\n        animate: {\n          opacity: 1,\n          scale: 1\n        },\n        transition: {\n          delay: index * 0.2,\n          duration: 0.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(ProjectTitle, {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProjectDescription, {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Technologies: \", project.technologies.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c6 = Projects;\nexport default Projects;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ProjectsContainer\");\n$RefreshReg$(_c2, \"ProjectGrid\");\n$RefreshReg$(_c3, \"ProjectCard\");\n$RefreshReg$(_c4, \"ProjectTitle\");\n$RefreshReg$(_c5, \"ProjectDescription\");\n$RefreshReg$(_c6, \"Projects\");","map":{"version":3,"names":["React","styled","motion","jsxDEV","_jsxDEV","ProjectsContainer","div","_c","ProjectGrid","_c2","ProjectCard","_c3","ProjectTitle","h3","_c4","ProjectDescription","p","_c5","Projects","projectsData","title","description","technologies","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","initial","opacity","scale","animate","transition","delay","duration","join","_c6","$RefreshReg$"],"sources":["D:/Codes/New/portfolio/src/pages/Projects.js"],"sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { motion } from 'framer-motion';\n\nconst ProjectsContainer = styled.div`\n  padding: 2rem;\n  margin-top: 80px;  // Add space below navbar\n  \n  @media (max-width: 768px) {\n    margin-top: 60px;  // Smaller margin for mobile devices\n  }\n`;\n\nconst ProjectGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 2rem;\n`;\n\nconst ProjectCard = styled(motion.div)`\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n  padding: 1.5rem;\n  text-align: center;\n`;\n\nconst ProjectTitle = styled.h3`\n  color: #3498db;\n  margin-bottom: 1rem;\n`;\n\nconst ProjectDescription = styled.p`\n  color: #666;\n`;\n\nconst Projects = () => {\n  const projectsData = [\n    {\n      title: 'Project 1',\n      description: 'A brief description of your first project.',\n      technologies: ['React', 'Node.js', 'MongoDB']\n    },\n    {\n      title: 'Project 2',\n      description: 'Details about another impressive project you\\'ve worked on.',\n      technologies: ['Python', 'Django', 'PostgreSQL']\n    },\n    {\n      title: 'Project 3',\n      description: 'Highlight your most significant or recent project.',\n      technologies: ['JavaScript', 'React Native', 'Firebase']\n    }\n  ];\n\n  return (\n    <ProjectsContainer>\n      <h2>My Projects</h2>\n      <ProjectGrid>\n        {projectsData.map((project, index) => (\n          <ProjectCard\n            key={index}\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ delay: index * 0.2, duration: 0.5 }}\n          >\n            <ProjectTitle>{project.title}</ProjectTitle>\n            <ProjectDescription>{project.description}</ProjectDescription>\n            <p>Technologies: {project.technologies.join(', ')}</p>\n          </ProjectCard>\n        ))}\n      </ProjectGrid>\n    </ProjectsContainer>\n  );\n};\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}